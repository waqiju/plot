# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pb import common_pb2 as pb_dot_common__pb2
from pb import trade_pb2 as pb_dot_trade__pb2


class TraderStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SubmitThsStockOrder = channel.unary_unary(
                '/Trader/SubmitThsStockOrder',
                request_serializer=pb_dot_trade__pb2.ThsStockOrderRequest.SerializeToString,
                response_deserializer=pb_dot_trade__pb2.ThsStockOrderResponse.FromString,
                )
        self.QueryOrderStatus = channel.unary_unary(
                '/Trader/QueryOrderStatus',
                request_serializer=pb_dot_trade__pb2.OrderInfo.SerializeToString,
                response_deserializer=pb_dot_trade__pb2.OrderStatus.FromString,
                )
        self.CancelOrder = channel.unary_unary(
                '/Trader/CancelOrder',
                request_serializer=pb_dot_trade__pb2.OrderInfo.SerializeToString,
                response_deserializer=pb_dot_common__pb2.BaseResp.FromString,
                )
        self.QueryPosition = channel.unary_unary(
                '/Trader/QueryPosition',
                request_serializer=pb_dot_trade__pb2.PositionRequest.SerializeToString,
                response_deserializer=pb_dot_trade__pb2.PositionResponse.FromString,
                )


class TraderServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SubmitThsStockOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryOrderStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryPosition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TraderServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SubmitThsStockOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitThsStockOrder,
                    request_deserializer=pb_dot_trade__pb2.ThsStockOrderRequest.FromString,
                    response_serializer=pb_dot_trade__pb2.ThsStockOrderResponse.SerializeToString,
            ),
            'QueryOrderStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryOrderStatus,
                    request_deserializer=pb_dot_trade__pb2.OrderInfo.FromString,
                    response_serializer=pb_dot_trade__pb2.OrderStatus.SerializeToString,
            ),
            'CancelOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelOrder,
                    request_deserializer=pb_dot_trade__pb2.OrderInfo.FromString,
                    response_serializer=pb_dot_common__pb2.BaseResp.SerializeToString,
            ),
            'QueryPosition': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryPosition,
                    request_deserializer=pb_dot_trade__pb2.PositionRequest.FromString,
                    response_serializer=pb_dot_trade__pb2.PositionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Trader', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Trader(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SubmitThsStockOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Trader/SubmitThsStockOrder',
            pb_dot_trade__pb2.ThsStockOrderRequest.SerializeToString,
            pb_dot_trade__pb2.ThsStockOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryOrderStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Trader/QueryOrderStatus',
            pb_dot_trade__pb2.OrderInfo.SerializeToString,
            pb_dot_trade__pb2.OrderStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Trader/CancelOrder',
            pb_dot_trade__pb2.OrderInfo.SerializeToString,
            pb_dot_common__pb2.BaseResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryPosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Trader/QueryPosition',
            pb_dot_trade__pb2.PositionRequest.SerializeToString,
            pb_dot_trade__pb2.PositionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
